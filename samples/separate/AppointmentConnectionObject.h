// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// WARNING! Do not edit this file manually, your changes will be overwritten.

#pragma once

#ifndef APPOINTMENTCONNECTIONOBJECT_H
#define APPOINTMENTCONNECTIONOBJECT_H

#include "TodaySchema.h"

namespace graphql::today::object {

class AppointmentConnection
	: public service::Object
{
protected:
	explicit AppointmentConnection();

public:
	virtual service::FieldResult<std::shared_ptr<PageInfo>> getPageInfo(service::FieldParams&& params) const;
	virtual service::FieldResult<std::optional<std::vector<std::shared_ptr<AppointmentEdge>>>> getEdges(service::FieldParams&& params) const;

private:
	service::AwaitableResolver resolvePageInfo(service::ResolverParams&& params);
	service::AwaitableResolver resolveEdges(service::ResolverParams&& params);

	service::AwaitableResolver resolve_typename(service::ResolverParams&& params);
};

} // namespace graphql::today::object

#endif // APPOINTMENTCONNECTIONOBJECT_H
